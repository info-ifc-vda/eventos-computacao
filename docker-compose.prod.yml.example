services:
  reverse-proxy:
      depends_on:
        - api
        - front
      image: nginx:latest
      container_name: ec.reverse-proxy
      tty: true
      ports:
        - "81:80"
      env_file: .env
      volumes:
        - ./nginx/conf.d:/etc/nginx/templates
        - ./api:/var/www/app
        - ./web/dist:/var/www/web/dist  # Monta o diret√≥rio dist
      restart: unless-stopped
      networks:
        - ec
        - fabrica-nginx-proxy-network

  api:
    depends_on:
      - db
    working_dir: /var/www/app
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: ec.api
    tty: true
    volumes:
      - ./api:/var/www/app
    restart: unless-stopped
    networks:
      - ec
      - fabrica-nginx-proxy-network

  db:
    image: postgres
    container_name: ec.db
    tty: true
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5436:5432"
    restart: unless-stopped
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - ec

  front:
    working_dir: /var/www/web
    image: node:20.15.0
    container_name: ec.front
    tty: true
    volumes:
      - ./web:/var/www/web
    # command: sh -c "npm ci && npm run serve:dev -- --host 0.0.0.0 --port 9001"
    command: sh -c "npm ci && npm run build:prod && npx serve -s dist -l tcp://front:9001"
    networks:
      - ec
      - fabrica-nginx-proxy-network

networks:
  ec:
    driver: bridge
  fabrica-nginx-proxy-network:
    external: true
volumes:
  db:
    driver: local