services:
  reverse-proxy:
    depends_on:
      - api
      # - front
    image: nginx:latest
    container_name: ec.reverse-proxy
    tty: true
    ports:
      - "80:80"
    env_file: .env
    volumes:
      - ./nginx/conf.d:/etc/nginx/templates
      - ./api:/var/www/app
      - ./web:/var/www/web
    restart: unless-stopped
    networks:
      - ec
        ipv4_address: "172.16.0.2"
  api:
    depends_on:
      - db
    working_dir: /var/www/app
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: ec.api
    tty: true
    volumes:
      - ./api:/var/www/app
    restart: unless-stopped
    networks:
      ec:
        ipv4_address: "172.16.0.10"
    extra_hosts:
      - "auth.eventos:172.16.0.2"
  db:
    image: postgres
    container_name: ec.db
    tty: true
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5436:5432"
    restart: unless-stopped
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      ec:
        ipv4_address: "172.16.0.3"
  front:
    working_dir: /var/www/web
    image: node:20.15.0
    container_name: ec.front
    tty: true
    volumes:
      - ./web:/var/www/web
    command: ["npm", "ci && npm", "run", "serve"]
    networks:
      ec:
        ipv4_address: "172.16.0.11"
networks:
  ec:
    driver: bridge
    ipam:
      config:
        - subnet: "172.16.0.0/24"
          gateway: "172.16.0.1"
volumes:
  db:
    driver: local